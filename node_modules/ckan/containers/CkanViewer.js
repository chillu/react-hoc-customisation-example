import { Query } from 'react-apollo';
import gql from 'graphql-tag';

import GriddleContainer from 'containers/GriddleContainer';

function fetchFromCkan (url, page, pageSize) {
  // ...
}

const CkanViewer = (id, viewComponent = GriddleContainer) => (
  <Query
    query={gql`
      {
        getDataSourceDefinition(id:id) {
          remoteUrl
          fields {
            name
            title
            casting
          }
          filters {
            name
            title
            type
          }
        }
      }
    `}
  >
    {({ loading, error, data }) => {
      if (loading) return <p>Loading...</p>;
      if (error) return <p>Error :(</p>;

      const onNext = (page, pageSize) => {
        return fetchFromCkan(data.remoteUrl, page + 1, pageSize);
      };

      return <viewComponent
        onNext={onNext}
        fields={data.fields}
        filters={data.filters}
      />;
    }}
  </Query>
);

export default CkanViewer;
